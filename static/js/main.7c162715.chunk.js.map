{"version":3,"sources":["components/PasswordItem/index.js","components/PassManager/index.js","App.js","index.js"],"names":["PasswordItem","props","passwordList","show","deletetheTab","updatetheTab","websiteInputUser","userInputPassword","userInputName","id","colorProfile","str","encode","CryptoJS","enc","Base64","stringify","Utf8","parse","_jsxs","className","children","_jsx","concat","type","onClick","src","alt","PassManager","_useState","useState","_useState2","_slicedToArray","updatePasswordList","_useState3","_useState4","setWebsiteInput","_useState5","_useState6","setUserName","_useState7","_useState8","setUserPassword","_useState9","_useState10","showPassword","setShowPassword","_useState11","_useState12","searchInput","setSearchInput","_useState13","_useState14","filterResult","setFilterResult","_useState15","_useState16","lastAddedWebsite","setLastAddedWebsite","_useState17","_useState18","isUpdate","setUpdateStatus","_useState19","_useState20","userUptWebsite","setUserUptWebsite","_useState21","_useState22","userUptPassword","setUserUptPassword","_useState23","_useState24","userUptName","setUserUptName","_useState25","_useState26","userUptId","setUserUptId","_useState27","_useState28","showSavedPasswords","setShowSavedPasswords","preventSubmit","event","preventDefault","focused","filteredList","filter","eachPassword","isListEmpty","length","onSubmit","value","placeholder","onChange","target","onFocus","e","prev","trim","colors","newEntry","uuidv4","Math","floor","random","_toConsumableArray","searchValue","toLowerCase","filteredResults","includes","prevList","map","password","_objectSpread","checked","htmlFor","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"wTAkEeA,EA/DM,SAAAC,GACnB,IAAOC,EAAkDD,EAAlDC,aAAcC,EAAoCF,EAApCE,KAAMC,EAA8BH,EAA9BG,aAAcC,EAAgBJ,EAAhBI,aAClCC,EAA0DJ,EAA1DI,iBAAkBC,EAAwCL,EAAxCK,kBAAmBC,EAAqBN,EAArBM,cAAeC,EAAMP,EAANO,GACpDC,EAAgBR,EAAhBQ,aAMDC,EAAMJ,EACNK,EAASC,IAASC,IAAIC,OAAOC,UAAUH,IAASC,IAAIG,KAAKC,MAAMP,IAMrE,OACEQ,eAAA,MAAIC,UAAU,iBAAgBC,SAAA,CAC5BC,cAAA,OAAAD,SACEC,cAAA,MAAIF,UAAS,YAAAG,OAAcb,GAAeW,SAAEf,EAAiB,OAE/Da,eAAA,OAAKC,UAAU,OAAMC,SAAA,CACnBC,cAAA,MAAIF,UAAU,YAAWC,SAAEf,IAC3BgB,cAAA,KAAGF,UAAU,WAAUC,SAAEb,IACxBL,EACCmB,cAAA,OAAKF,UAAU,WAAUC,SAAEd,IAE3Be,cAAA,OAAKF,UAAU,WAAUC,SACvBC,cAAA,KAAGF,UAAU,MAAKC,SAAET,SAI1BO,eAAA,OAAKC,UAAU,UAASC,SAAA,CACtBC,cAAA,UACEE,KAAK,SACLJ,UAAU,MACV,cAAY,SACZK,QAzBU,WAChBpB,EAAaH,EACf,EAwBQ,aAAW,SAAQmB,SAEnBC,cAAA,OACEI,IAAI,kFACJN,UAAU,cACVO,IAAI,aAGRL,cAAA,UACEE,KAAK,SACLJ,UAAU,MACV,cAAY,SACZK,QA7CU,WAChBrB,EAAaK,EACf,EA2C2BY,SAEnBC,cAAA,OACEI,IAAI,2EACJC,IAAI,SACJP,UAAU,uBAMtB,ECwReQ,G,MAnVK,WAClB,IAAAC,EAA2CC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAhD3B,EAAY6B,EAAA,GAAEE,EAAkBF,EAAA,GACvCG,EAA4CJ,mBAAS,IAAGK,EAAAH,YAAAE,EAAA,GAAjD5B,EAAgB6B,EAAA,GAAEC,EAAeD,EAAA,GACxCE,EAAqCP,mBAAS,IAAGQ,EAAAN,YAAAK,EAAA,GAA1C7B,EAAa8B,EAAA,GAAEC,EAAWD,EAAA,GACjCE,EAA6CV,mBAAS,IAAGW,EAAAT,YAAAQ,EAAA,GAAlDjC,EAAiBkC,EAAA,GAAEC,EAAeD,EAAA,GACzCE,EAAwCb,oBAAS,GAAMc,EAAAZ,YAAAW,EAAA,GAAhDE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,EAAsCjB,mBAAS,IAAGkB,EAAAhB,YAAAe,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,EAAwCrB,mBAAS,IAAGsB,EAAApB,YAAAmB,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,EAAgDzB,mBAAS,IAAG0B,EAAAxB,YAAAuB,EAAA,GAArDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAC5CG,EAAoC7B,oBAAS,GAAM8B,EAAA5B,YAAA2B,EAAA,GAA5CE,EAAQD,EAAA,GAAEE,EAAeF,EAAA,GAChCG,EAA4CjC,mBAAS,IAAGkC,EAAAhC,YAAA+B,EAAA,GAAjDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,EAA8CrC,mBAAS,IAAGsC,EAAApC,YAAAmC,EAAA,GAAnDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAC1CG,EAAsCzC,mBAAS,IAAG0C,EAAAxC,YAAAuC,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,GAAcF,EAAA,GAClCG,GAAkC7C,mBAAS,MAAK8C,GAAA5C,YAAA2C,GAAA,GAAzCE,GAASD,GAAA,GAAEE,GAAYF,GAAA,GAC9BG,GAAoDjD,oBAAS,GAAMkD,GAAAhD,YAAA+C,GAAA,GAA5DE,GAAkBD,GAAA,GAAEE,GAAqBF,GAAA,GAE1CG,GAAgB,SAAAC,GACpBA,EAAMC,gBACR,EAMMC,GAAU,WACd5B,EAAoB,GACtB,EAyDMtD,GAAe,SAAAK,GACnB,IAAM8E,EAAerF,EAAasF,QAChC,SAAAC,GAAY,OAAIA,EAAahF,KAAOA,CAAE,IAExCwB,EAAmBsD,GACnBjC,EAAgBiC,GAChB7B,EAAoB,GACtB,EAoCMgC,GAAsC,IAAxBrC,EAAasC,OAEjC,OACExE,eAAA,OAAKC,UAAU,eAAcC,SAAA,CAC3BC,cAAA,OACEI,IAAI,yEACJC,IAAI,WACJP,UAAU,eAEZD,eAAA,OAAKC,UAAU,gBAAeC,SAAA,CAC5BF,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,MAAIF,UAAU,UAASC,SAAC,qBACxBF,eAAA,QAAMyE,SAAUT,GAAc9D,SAAA,CAC5BF,eAAA,OAAKC,UAAU,oBAAmBC,SAAA,CAChCC,cAAA,OACEI,IAAI,4EACJC,IAAI,UACJP,UAAU,YAEZE,cAAA,SACEuE,MAAOvF,EACPkB,KAAK,OACLJ,UAAU,UACV0E,YAAY,gBACZC,SAlIa,SAAAX,GACzBhD,EAAgBgD,EAAMY,OAAOH,MAC/B,EAiIcI,QAASX,QAIbnE,eAAA,OAAKC,UAAU,oBAAmBC,SAAA,CAChCC,cAAA,OACEI,IAAI,6EACJC,IAAI,WACJP,UAAU,YAEZE,cAAA,SACEuE,MAAOrF,EACPuF,SAAU,SAAAG,GAAC,OAAI3D,EAAY2D,EAAEF,OAAOH,MAAM,EAC1CrE,KAAK,OACLJ,UAAU,UACV0E,YAAY,iBACZG,QAASX,QAIbnE,eAAA,OAAKC,UAAU,oBAAmBC,SAAA,CAChCC,cAAA,OACEI,IAAI,6EACJC,IAAI,WACJP,UAAU,YAEZE,cAAA,SACEuE,MAAOtF,EACPiB,KAAMqB,EAAe,OAAS,WAC9BzB,UAAU,UACV0E,YAAY,iBACZC,SAAU,SAAAG,GAAC,OAAIxD,EAAgBwD,EAAEF,OAAOH,MAAM,IAEhD1E,eAAA,UACEK,KAAK,SACLJ,UAAU,WACVK,QAAS,WAAF,OAAQqB,GAAgB,SAAAqD,GAAI,OAAKA,CAAI,GAAC,EAAC9E,SAAA,CAE7CwB,EAAe,eAAO,eAAM,UAIjCvB,cAAA,UAAQE,KAAK,SAASJ,UAAU,UAAUK,QAtK7B,WACrB,GAC8B,KAA5BnB,EAAiB8F,QACY,KAA7B7F,EAAkB6F,QACO,KAAzB5F,EAAc4F,OAHhB,CAQA,IAAMC,EAAS,CACb,OACA,OACA,QACA,SACA,SACA,SACA,SACA,OACA,OACA,SAGIC,EAAW,CACfhG,mBACAC,oBACAC,gBACAC,GAAI8F,cACJ7F,aAAc2F,EAAOG,KAAKC,MAAMD,KAAKE,SAAWL,EAAOV,UAGzDjC,EAAoBpD,GACpB2B,GAAmB,SAAAkE,GAAI,SAAA5E,OAAAoF,YAAQR,GAAI,CAAEG,GAAQ,IAC7ChD,GAAgB,SAAA6C,GAAI,SAAA5E,OAAAoF,YAAQR,GAAI,CAAEG,GAAQ,IAE1ClE,EAAgB,IAChBG,EAAY,IACZG,EAAgB,IAEhBI,GAAgB,EA/BhB,CAgCF,EA+H4EzB,SAAC,WAIpEoC,GACCnC,cAAA,KAAGF,UAAU,gBAAeC,SAAC,wBAIjCC,cAAA,OAAAD,SACEC,cAAA,OACEI,IAAI,uEACJC,IAAI,mBACJP,UAAU,uBAKhBD,eAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAC/BF,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC9BF,eAAA,MAAIC,UAAU,UAASC,SAAA,CAAC,iBACP,IACfC,cAAA,QAAMF,UAAU,iBAAgBC,SAAEgC,EAAasC,YAGjDxE,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACzBC,cAAA,OACEI,IAAI,2EACJC,IAAI,SACJP,UAAU,gBAEZE,cAAA,SACEE,KAAK,SACLJ,UAAU,UACVyE,MAAO5C,EACP8C,SA5JS,SAAAX,GACnB,IAAMwB,EAAcxB,EAAMY,OAAOH,MAAMgB,cACvC3D,EAAe0D,GAEf,IAAME,EAAkB5G,EAAasF,QAAO,SAAAC,GAAY,OACtDA,EAAanF,iBAAiBuG,cAAcE,SAASH,EAAY,IAGnEtD,EAAgBwD,EAClB,EAoJYhB,YAAY,iBAIjBjC,GACC1C,eAAA,OAAKC,UAAU,cAAaC,SAAA,CAC1BF,eAAA,QAAMyE,SAAUT,GAAc9D,SAAA,CAC5BF,eAAA,OAAKC,UAAU,oBAAmBC,SAAA,CAChCC,cAAA,OACEI,IAAI,4EACJC,IAAI,UACJP,UAAU,YAEZE,cAAA,SACEE,KAAK,OACLJ,UAAU,UACV0E,YAAY,oBACZD,MAAO5B,EACP8B,SAAU,SAAAG,GAAC,OAAIhC,EAAkBgC,EAAEF,OAAOH,MAAM,OAGpD1E,eAAA,OAAKC,UAAU,oBAAmBC,SAAA,CAChCC,cAAA,OACEI,IAAI,6EACJC,IAAI,WACJP,UAAU,YAEZE,cAAA,SACEE,KAAK,OACLJ,UAAU,UACVyE,MAAOpB,EACPqB,YAAY,qBACZC,SAAU,SAAAG,GAAC,OAAIxB,GAAewB,EAAEF,OAAOH,MAAM,OAGjD1E,eAAA,OAAKC,UAAU,oBAAmBC,SAAA,CAChCC,cAAA,OACEI,IAAI,6EACJC,IAAI,WACJP,UAAU,YAEZE,cAAA,SACEF,UAAU,UACV0E,YAAY,qBACZD,MAAOxB,EACP7C,KAAK,WACLuE,SAAU,SAAAG,GAAC,OAAI5B,EAAmB4B,EAAEF,OAAOH,MAAM,OAE9C,OAET1E,eAAA,OAAKC,UAAU,wBAAuBC,SAAA,CACpCC,cAAA,UACEE,KAAK,SACLJ,UAAU,eACVK,QApKU,WACtBqC,GAAgB,GAChBI,EAAkB,IAClBQ,GAAe,IACfJ,EAAmB,GACrB,EA+JuCjD,SAC1B,UAGDC,cAAA,UACEE,KAAK,SACLJ,UAAU,cACVK,QA9LW,WAClBoD,KAELvB,GAAgB,SAAA0D,GAAQ,OACtBA,EAASC,KAAI,SAAAC,GAAQ,OACnBA,EAASzG,KAAOoE,GAASsC,wBAAA,GAEhBD,GAAQ,IACX1G,cAAeiE,EACflE,kBAAmB8D,EACnB/D,iBAAkB2D,IAEpBiD,CAAQ,GACb,IAEHpD,GAAgB,GAChBgB,GAAa,MACf,EA6KwCzD,SAC3B,iBAOPF,eAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAC/BC,cAAA,SACEb,GAAG,QACHe,KAAK,WACLJ,UAAU,eACVgG,QAASnC,GACTc,SAAU,WAAF,OAAQb,IAAsB,SAAAiB,GAAI,OAAKA,CAAI,GAAC,IAEtD7E,cAAA,SAAO+F,QAAQ,QAAOhG,SAAC,sBAExBoC,GAAoBZ,GACnBvB,cAAA,KAAGF,UAAU,gBAAeC,SAAC,sBAG9BqE,GACCvE,eAAA,OAAKC,UAAU,oBAAmBC,SAAA,CAChCC,cAAA,OACEI,IAAI,gEACJC,IAAI,eACJP,UAAU,iBAEZE,cAAA,KAAGF,UAAU,aAAYC,SAAC,oBAG5BC,cAAA,MAAIF,UAAU,gBAAeC,SAC1BgC,EAAa4D,KAAI,SAAAxB,GAAY,OAC5BnE,cAACtB,EAAY,CAEXE,aAAcuF,EACdtF,KAAM8E,GACN7E,aAAcA,GACdC,aAAc,WAAF,OA7OxByE,IADmBoC,EA8O0BzB,GA7OvBhF,IAEtBqD,GAAgB,GAChBI,EAAkBgD,EAAS5G,kBAC3BoE,GAAewC,EAAS1G,oBACxB8D,EAAmB4C,EAAS3G,mBANT,IAAA2G,CA8OuC,GAJzCzB,EAAahF,GAKlB,WAOhB,GCjVe6G,G,MAFH,WAAH,OAAShG,cAACM,EAAW,GAAG,GCCjC2F,IAASC,OACPlG,cAACmG,IAAMC,WAAU,CAAArG,SACfC,cAACgG,EAAG,MAENK,SAASC,eAAe,Q","file":"static/js/main.7c162715.chunk.js","sourcesContent":["import './index.css'\nimport CryptoJS from 'crypto-js'\n\nconst PasswordItem = props => {\n  const {passwordList, show, deletetheTab, updatetheTab} = props\n  const {websiteInputUser, userInputPassword, userInputName, id} = passwordList\n  const {colorProfile} = passwordList\n\n  const deleteTab = () => {\n    deletetheTab(id)\n  }\n\n  const str = userInputPassword\n  const encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(str))\n\n  const updateTab = () => {\n    updatetheTab(passwordList)\n  }\n\n  return (\n    <li className=\"subs-container\">\n      <div>\n        <h1 className={`web-name ${colorProfile}`}>{websiteInputUser[0]}</h1>\n      </div>\n      <div className=\"cont\">\n        <h1 className=\"web-names\">{websiteInputUser}</h1>\n        <p className=\"inp-name\">{userInputName}</p>\n        {show ? (\n          <div className=\"pas-name\">{userInputPassword}</div>\n        ) : (\n          <div className=\"pas-name\">\n            <p className=\"pas\">{encode}</p>\n          </div>\n        )}\n      </div>\n      <div className=\"dustbin\">\n        <button\n          type=\"button\"\n          className=\"bot\"\n          data-testid=\"update\"\n          onClick={updateTab}\n          aria-label=\"update\"\n        >\n          <img\n            src=\"https://res.cloudinary.com/derbjij6p/image/upload/v1739138366/pencil_rfetxq.png\"\n            className=\"update-icon\"\n            alt=\"update\"\n          />\n        </button>\n        <button\n          type=\"button\"\n          className=\"bot\"\n          data-testid=\"delete\"\n          onClick={deleteTab}\n        >\n          <img\n            src=\"https://assets.ccbp.in/frontend/react-js/password-manager-delete-img.png\"\n            alt=\"delete\"\n            className=\"delete-icon\"\n          />\n        </button>\n      </div>\n    </li>\n  )\n}\n\nexport default PasswordItem\n","import {useState} from 'react'\nimport {v4 as uuidv4} from 'uuid'\nimport PasswordItem from '../PasswordItem'\nimport './index.css'\n\nconst PassManager = () => {\n  const [passwordList, updatePasswordList] = useState([])\n  const [websiteInputUser, setWebsiteInput] = useState('')\n  const [userInputName, setUserName] = useState('')\n  const [userInputPassword, setUserPassword] = useState('')\n  const [showPassword, setShowPassword] = useState(false)\n  const [searchInput, setSearchInput] = useState('')\n  const [filterResult, setFilterResult] = useState([])\n  const [lastAddedWebsite, setLastAddedWebsite] = useState('')\n  const [isUpdate, setUpdateStatus] = useState(false)\n  const [userUptWebsite, setUserUptWebsite] = useState('')\n  const [userUptPassword, setUserUptPassword] = useState('')\n  const [userUptName, setUserUptName] = useState('')\n  const [userUptId, setUserUptId] = useState(null)\n  const [showSavedPasswords, setShowSavedPasswords] = useState(false)\n\n  const preventSubmit = event => {\n    event.preventDefault()\n  }\n\n  const handleWebsiteInput = event => {\n    setWebsiteInput(event.target.value)\n  }\n\n  const focused = () => {\n    setLastAddedWebsite('')\n  }\n  const onAddPasswords = () => {\n    if (\n      websiteInputUser.trim() === '' ||\n      userInputPassword.trim() === '' ||\n      userInputName.trim() === ''\n    ) {\n      return\n    }\n\n    const colors = [\n      'aqua',\n      'teal',\n      'black',\n      'maroon',\n      'orange',\n      'yellow',\n      'indigo',\n      'pink',\n      'gold',\n      'coral',\n    ]\n\n    const newEntry = {\n      websiteInputUser,\n      userInputPassword,\n      userInputName,\n      id: uuidv4(),\n      colorProfile: colors[Math.floor(Math.random() * colors.length)],\n    }\n\n    setLastAddedWebsite(websiteInputUser)\n    updatePasswordList(prev => [...prev, newEntry])\n    setFilterResult(prev => [...prev, newEntry])\n\n    setWebsiteInput('')\n    setUserName('')\n    setUserPassword('')\n\n    setShowPassword(false)\n  }\n\n  // const toggleShowPass = () => {\n  //   setShowPassword(prev => !prev)\n  // }\n\n  const searchResult = event => {\n    const searchValue = event.target.value.toLowerCase()\n    setSearchInput(searchValue)\n\n    const filteredResults = passwordList.filter(eachPassword =>\n      eachPassword.websiteInputUser.toLowerCase().includes(searchValue),\n    )\n\n    setFilterResult(filteredResults)\n  }\n\n  const deletetheTab = id => {\n    const filteredList = passwordList.filter(\n      eachPassword => eachPassword.id !== id,\n    )\n    updatePasswordList(filteredList)\n    setFilterResult(filteredList)\n    setLastAddedWebsite('')\n  }\n  const updatetheTab = password => {\n    setUserUptId(password.id)\n\n    setUpdateStatus(true)\n    setUserUptWebsite(password.websiteInputUser)\n    setUserUptName(password.userInputName)\n    setUserUptPassword(password.userInputPassword)\n  }\n\n  const addUpdatedInputs = () => {\n    if (!userUptId) return\n\n    setFilterResult(prevList =>\n      prevList.map(password =>\n        password.id === userUptId\n          ? {\n              ...password,\n              userInputName: userUptName,\n              userInputPassword: userUptPassword,\n              websiteInputUser: userUptWebsite,\n            }\n          : password,\n      ),\n    )\n    setUpdateStatus(false)\n    setUserUptId(null)\n  }\n\n  const closeUpdateForm = () => {\n    setUpdateStatus(false)\n    setUserUptWebsite('')\n    setUserUptName('')\n    setUserUptPassword('')\n  }\n\n  const isListEmpty = filterResult.length === 0\n\n  return (\n    <div className=\"bg-container\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/password-manager-logo-img.png\"\n        alt=\"app logo\"\n        className=\"logo-image\"\n      />\n      <div className=\"sub-container\">\n        <div className=\"form-container\">\n          <h1 className=\"heading\">Add New Password</h1>\n          <form onSubmit={preventSubmit}>\n            <div className=\"website-container\">\n              <img\n                src=\"https://assets.ccbp.in/frontend/react-js/password-manager-website-img.png\"\n                alt=\"website\"\n                className=\"website\"\n              />\n              <input\n                value={websiteInputUser}\n                type=\"text\"\n                className=\"web-inp\"\n                placeholder=\"Enter Website\"\n                onChange={handleWebsiteInput}\n                onFocus={focused}\n              />\n            </div>\n\n            <div className=\"website-container\">\n              <img\n                src=\"https://assets.ccbp.in/frontend/react-js/password-manager-username-img.png\"\n                alt=\"username\"\n                className=\"website\"\n              />\n              <input\n                value={userInputName}\n                onChange={e => setUserName(e.target.value)}\n                type=\"text\"\n                className=\"web-inp\"\n                placeholder=\"Enter Username\"\n                onFocus={focused}\n              />\n            </div>\n\n            <div className=\"website-container\">\n              <img\n                src=\"https://assets.ccbp.in/frontend/react-js/password-manager-password-img.png\"\n                alt=\"password\"\n                className=\"website\"\n              />\n              <input\n                value={userInputPassword}\n                type={showPassword ? 'text' : 'password'}\n                className=\"web-inp\"\n                placeholder=\"Enter Password\"\n                onChange={e => setUserPassword(e.target.value)}\n              />\n              <button\n                type=\"button\"\n                className=\"eye-icon\"\n                onClick={() => setShowPassword(prev => !prev)}\n              >\n                {showPassword ? '🙈' : '👁'}{' '}\n              </button>\n            </div>\n\n            <button type=\"submit\" className=\"add-btn\" onClick={onAddPasswords}>\n              Add\n            </button>\n          </form>\n          {lastAddedWebsite && (\n            <p className=\"added-website\">website provided</p>\n          )}\n        </div>\n\n        <div>\n          <img\n            src=\"https://assets.ccbp.in/frontend/react-js/password-manager-lg-img.png\"\n            alt=\"password manager\"\n            className=\"manager-image\"\n          />\n        </div>\n      </div>\n\n      <div className=\"bottom-container\">\n        <div className=\"bottom-contents\">\n          <h1 className=\"heading\">\n            Your Passwords{' '}\n            <span className=\"password-count\">{filterResult.length}</span>\n          </h1>\n\n          <div className=\"search-bar\">\n            <img\n              src=\"https://assets.ccbp.in/frontend/react-js/password-manager-search-img.png\"\n              alt=\"search\"\n              className=\"search-icon\"\n            />\n            <input\n              type=\"search\"\n              className=\"web-ser\"\n              value={searchInput}\n              onChange={searchResult}\n              placeholder=\"Search\"\n            />\n          </div>\n        </div>\n        {isUpdate && (\n          <div className=\"hidden-form\">\n            <form onSubmit={preventSubmit}>\n              <div className=\"website-container\">\n                <img\n                  src=\"https://assets.ccbp.in/frontend/react-js/password-manager-website-img.png\"\n                  alt=\"website\"\n                  className=\"website\"\n                />\n                <input\n                  type=\"text\"\n                  className=\"web-inp\"\n                  placeholder=\"Enter new Website\"\n                  value={userUptWebsite}\n                  onChange={e => setUserUptWebsite(e.target.value)}\n                />\n              </div>\n              <div className=\"website-container\">\n                <img\n                  src=\"https://assets.ccbp.in/frontend/react-js/password-manager-username-img.png\"\n                  alt=\"username\"\n                  className=\"website\"\n                />\n                <input\n                  type=\"text\"\n                  className=\"web-inp\"\n                  value={userUptName}\n                  placeholder=\"Enter new Username\"\n                  onChange={e => setUserUptName(e.target.value)}\n                />\n              </div>\n              <div className=\"website-container\">\n                <img\n                  src=\"https://assets.ccbp.in/frontend/react-js/password-manager-password-img.png\"\n                  alt=\"password\"\n                  className=\"website\"\n                />\n                <input\n                  className=\"web-inp\"\n                  placeholder=\"Enter new Password\"\n                  value={userUptPassword}\n                  type=\"password\"\n                  onChange={e => setUserUptPassword(e.target.value)}\n                />\n              </div>{' '}\n            </form>\n            <div className=\"new-buttons-container\">\n              <button\n                type=\"button\"\n                className=\"close-button\"\n                onClick={closeUpdateForm}\n              >\n                Close\n              </button>\n              <button\n                type=\"submit\"\n                className=\"upt-button \"\n                onClick={addUpdatedInputs}\n              >\n                Update\n              </button>\n            </div>\n          </div>\n        )}\n\n        <div className=\"second-container\">\n          <input\n            id=\"check\"\n            type=\"checkbox\"\n            className=\"checkbox-inp\"\n            checked={showSavedPasswords}\n            onChange={() => setShowSavedPasswords(prev => !prev)}\n          />\n          <label htmlFor=\"check\">Show Passwords</label>\n        </div>\n        {lastAddedWebsite && showPassword && (\n          <p className=\"added-website\">password provided</p>\n        )}\n\n        {isListEmpty ? (\n          <div className=\"no-passwords-cont\">\n            <img\n              src=\"https://assets.ccbp.in/frontend/react-js/no-passwords-img.png\"\n              alt=\"no passwords\"\n              className=\"no-passwords\"\n            />\n            <p className=\"par-nopass\">No Passwords</p>\n          </div>\n        ) : (\n          <ul className=\"password-list\">\n            {filterResult.map(eachPassword => (\n              <PasswordItem\n                key={eachPassword.id}\n                passwordList={eachPassword}\n                show={showSavedPasswords}\n                deletetheTab={deletetheTab}\n                updatetheTab={() => updatetheTab(eachPassword)}\n              />\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default PassManager\n","import PassManager from './components/PassManager'\nimport './App.css'\n\nconst App = () => <PassManager />\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}